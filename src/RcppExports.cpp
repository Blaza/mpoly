// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// reducePoly
List reducePoly(const List& poly, const CharacterVector& vars);
RcppExport SEXP _mpoly_reducePoly(SEXP polySEXP, SEXP varsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type poly(polySEXP);
    Rcpp::traits::input_parameter< const CharacterVector& >::type vars(varsSEXP);
    rcpp_result_gen = Rcpp::wrap(reducePoly(poly, vars));
    return rcpp_result_gen;
END_RCPP
}
// mpolyMult
List mpolyMult(const List& e1, const List& e2);
RcppExport SEXP _mpoly_mpolyMult(SEXP e1SEXP, SEXP e2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type e1(e1SEXP);
    Rcpp::traits::input_parameter< const List& >::type e2(e2SEXP);
    rcpp_result_gen = Rcpp::wrap(mpolyMult(e1, e2));
    return rcpp_result_gen;
END_RCPP
}
// mpolyPow
List mpolyPow(const List& e1, int e2, const CharacterVector& vars);
RcppExport SEXP _mpoly_mpolyPow(SEXP e1SEXP, SEXP e2SEXP, SEXP varsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type e1(e1SEXP);
    Rcpp::traits::input_parameter< int >::type e2(e2SEXP);
    Rcpp::traits::input_parameter< const CharacterVector& >::type vars(varsSEXP);
    rcpp_result_gen = Rcpp::wrap(mpolyPow(e1, e2, vars));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mpoly_reducePoly", (DL_FUNC) &_mpoly_reducePoly, 2},
    {"_mpoly_mpolyMult", (DL_FUNC) &_mpoly_mpolyMult, 2},
    {"_mpoly_mpolyPow", (DL_FUNC) &_mpoly_mpolyPow, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_mpoly(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
